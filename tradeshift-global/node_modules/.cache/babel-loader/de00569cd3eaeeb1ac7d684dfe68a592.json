{"ast":null,"code":"var _jsxFileName = \"/Users/rthota/Downloads/tradeshift fe tech challenge/tradeshift-global/src/containers/search-page.js\";\nimport React, { Fragment } from 'react';\nimport Api from '../components/fetch';\n\nclass SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadCountries = () => {\n      Api({\n        url: 'getcountries'\n      }).then(countries => {\n        this.setState({\n          countries: countries\n        });\n      });\n    };\n\n    this.setCountry = e => {};\n\n    this.searchTextChange = e => {\n      this.setState({\n        searchText: e.target.value\n      });\n      Api({\n        url: 'searchcountry',\n        data: {\n          searchText: e.target.value,\n          countryCode: ''\n        }\n      }).then(results => {\n        this.setState({\n          searchResults: results\n        });\n      });\n    };\n\n    this.state = {\n      searchText: '',\n      searchResults: [],\n      countries: [],\n      selectedCountry: ''\n    };\n    this.searchTextChange = this.searchTextChange.bind(this);\n    this.loadCountries = this.loadCountries.bind(this);\n    this.setCountry = this.setCountry.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadCountries();\n  }\n\n  render() {\n    var _this$state$searchRes, _this$state$countries;\n\n    const companies = (_this$state$searchRes = this.state.searchResults) !== null && _this$state$searchRes !== void 0 ? _this$state$searchRes : [];\n    const countries = (_this$state$countries = this.state.countries) !== null && _this$state$countries !== void 0 ? _this$state$countries : [];\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.setCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Select country\"), countries && countries.length > 0 && countries.map((c, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: i.toString(),\n        value: c.code,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }\n      }, c.name);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input is-primary\",\n      onChange: this.searchTextChange,\n      type: \"text\",\n      placeholder: \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, this.state.searchText && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Search Results for \", this.state.searchText)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, companies && companies.length > 0 && companies.map((c, i) => {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        key: i.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, c.name), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, c.address));\n    })));\n  }\n\n}\n\nexport default SearchPage;","map":{"version":3,"sources":["/Users/rthota/Downloads/tradeshift fe tech challenge/tradeshift-global/src/containers/search-page.js"],"names":["React","Fragment","Api","SearchPage","Component","constructor","props","loadCountries","url","then","countries","setState","setCountry","e","searchTextChange","searchText","target","value","data","countryCode","results","searchResults","state","selectedCountry","bind","componentDidMount","render","companies","length","map","c","i","toString","code","name","address"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport Api from '../components/fetch'\n\nclass SearchPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      searchResults: [],\n      countries: [],\n      selectedCountry: '',\n    }\n\n    this.searchTextChange = this.searchTextChange.bind(this);\n    this.loadCountries = this.loadCountries.bind(this);\n    this.setCountry = this.setCountry.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadCountries();\n  }\n\n  loadCountries = () => {\n    Api({url: 'getcountries'})\n    .then(countries => {\n      this.setState({countries : countries});\n    })\n  }\n\n  setCountry = (e) => {\n\n  }\n\n  searchTextChange = (e) => {\n    this.setState({ searchText: e.target.value });\n    Api({ url: 'searchcountry', data: { searchText: e.target.value, countryCode: '' } })\n      .then(results => {\n        this.setState({ searchResults: results });\n      })\n  }\n\n  render() {\n    const companies = this.state.searchResults ?? [];\n    const countries = this.state.countries ?? [];\n    return (<Fragment>\n      <div className=\"select\">\n        <select onChange={this.setCountry}>\n          <option>Select country</option>\n          {\n            countries && countries.length>0 && countries.map((c,i) => {\n              return <option key={i.toString()} value={c.code}>{c.name}</option>\n            })\n          }\n        </select>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <input className=\"input is-primary\" onChange={this.searchTextChange} type=\"text\" placeholder=\"Search\" />\n\n        </div>\n\n      </div>\n      <button className=\"button\">Search</button>\n      <div>\n        {\n          this.state.searchText && (\n            <p>Search Results for {this.state.searchText}</p>\n          )\n        }\n      </div>\n      <div>\n        {\n          companies && companies.length > 0 && companies.map((c, i) => {\n            return (\n              <Fragment key={i.toString()}>\n                <div>{c.name}</div>\n                <div>{c.address}</div>\n              </Fragment>\n            )\n          })\n\n        }\n      </div>\n    </Fragment>);\n  }\n}\n\nexport default SearchPage;"]},"metadata":{},"sourceType":"module"}